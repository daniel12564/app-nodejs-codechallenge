version: "3.7"
services:
  transactions:
    build:
      context: ./src
      dockerfile: ./apps/ms-transactions/Dockerfile
    command: yarn run start:dev transactions
    networks:
      - local-network
    ports:
      - '3000:3000'
    volumes:
      - ./src:/usr/src/app
  anti-fraud:
    build:
      context: ./src
      dockerfile: ./apps/ms-anti-fraud/Dockerfile
    command: yarn run start:dev anti-fraud
    networks:
      - local-network
    ports:
      - '3001:3001'
    volumes:
      - ./src:/usr/src/app
  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    networks:
      - local-network
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: my_root
      MONGO_INITDB_ROOT_PASSWORD: my_password
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    networks:
      - local-network
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    networks:
      - local-network
    depends_on: [ zookeeper ]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - '9092:9092'
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - local-network
    depends_on:
      - kafka
    ports:
      - '19000:9000'
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
volumes:
  mongodb_data:
networks:
  local-network:
    driver: bridge